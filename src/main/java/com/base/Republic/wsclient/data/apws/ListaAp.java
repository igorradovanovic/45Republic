package com.base.Republic.wsclient.data.apws;


import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.2.4
 * 2018-08-07T14:34:08.268+02:00
 * Generated source version: 3.2.4
 *
 */
@WebServiceClient(name = "ListaAp",
                  wsdlLocation = "https://gsb.test-uzda.gov.rs/Proxies/APR_PLProxyService/ListaAp.svc?wsdl",
                  targetNamespace = "http://tempuri.org/")
public class ListaAp extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "ListaAp");
    public final static QName BasicHttpsBindingIListaAp = new QName("http://tempuri.org/", "BasicHttpsBinding_IListaAp");
    public final static QName BasicHttpBindingIListaAp = new QName("http://tempuri.org/", "BasicHttpBinding_IListaAp");
    static {
        URL url = null;
        try {
            url = new URL("https://gsb.test-uzda.gov.rs/Proxies/APR_PLProxyService/ListaAp.svc?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(ListaAp.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "https://gsb.test-uzda.gov.rs/Proxies/APR_PLProxyService/ListaAp.svc?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public ListaAp(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ListaAp(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ListaAp() {
        super(WSDL_LOCATION, SERVICE);
    }

    public ListaAp(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public ListaAp(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public ListaAp(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns IListaAp
     */
    @WebEndpoint(name = "BasicHttpsBinding_IListaAp")
    public IListaAp getBasicHttpsBindingIListaAp() {
        return super.getPort(BasicHttpsBindingIListaAp, IListaAp.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IListaAp
     */
    @WebEndpoint(name = "BasicHttpsBinding_IListaAp")
    public IListaAp getBasicHttpsBindingIListaAp(WebServiceFeature... features) {
        return super.getPort(BasicHttpsBindingIListaAp, IListaAp.class, features);
    }


    /**
     *
     * @return
     *     returns IListaAp
     */
    @WebEndpoint(name = "BasicHttpBinding_IListaAp")
    public IListaAp getBasicHttpBindingIListaAp() {
        return super.getPort(BasicHttpBindingIListaAp, IListaAp.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IListaAp
     */
    @WebEndpoint(name = "BasicHttpBinding_IListaAp")
    public IListaAp getBasicHttpBindingIListaAp(WebServiceFeature... features) {
        return super.getPort(BasicHttpBindingIListaAp, IListaAp.class, features);
    }

}
